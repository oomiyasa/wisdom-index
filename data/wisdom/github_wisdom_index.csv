description,rationale,use_case,impact_area,transferability_score,actionability_rating,evidence_strength,type_(form),tag_(application),unique?,role,function,company,industry,country,date,source_(interview_#/_name),link,notes
Establish clear build constraints for software development projects,"Setting clear build constraints helps to manage dependencies and prevent potential conflicts. It can be done by pinning all dependencies, setting upper bounds, or defining ranges. This practice provides a controlled environment for the software to run and ensures that all components work together seamlessly.","Software development, Dependency management",Efficiency,4,4,Observed,rule-of-thumb,Project Management,N,nan,nan,nan,nan,nan,2025-08-12,github/potiuk,https://github.com/apache/airflow/issues/54394#issuecomment-3180159412,repo: apache/airflow | issue: Add support to `--build-constraint(s)` flag for our constraint preparation | keyword: best practice
"Use the 'breeze start-airflow --template-searchpath' CLI option to set a default path in Breeze, instead of exporting every time.","This method saves time and reduces the risk of errors by eliminating the need to manually export the path each time. It also ensures consistency across different sessions, as the path is set as a default.",Setting default path in Breeze,Efficiency,4,5,Observed,workaround,Process Optimization,N,nan,nan,nan,nan,nan,2025-08-06,github/Brunda10,https://github.com/apache/airflow/issues/53972#issuecomment-3159742446,repo: apache/airflow | issue: Support a global template_searchpath config option in Airflow | keyword: best practice
Use a logger instance instead of print() in your code,"Using a logger provides more control over message formatting and output levels, and can easily be configured to output log messages to different places like console, files, etc. It also helps in debugging and tracking the flow of the program.",Debugging and tracking code,Efficiency,4,5,Observed,rule-of-thumb,Code Efficiency,N,nan,nan,nan,nan,nan,2025-07-21,github/tanujdargan,https://github.com/apache/airflow/issues/53162#issuecomment-3096005490,repo: apache/airflow | issue: Listeners not firing on task success | keyword: best practice
Prioritize tackling familiar problems for efficiency in project management.,"Familiarity with a problem allows for quicker identification of solutions and efficient testing, saving time and resources.","Project management, problem-solving",Efficiency,4,4,Anecdotal,rule-of-thumb,Project Management,N,nan,nan,nan,nan,nan,2022-08-10,github/argibbs,https://github.com/apache/airflow/pull/25489#issuecomment-1211303956,repo: apache/airflow | issue: Dag processor manager queue split (fixes SLAs) | keyword: lesson learned
Use DELETE as a temporary workaround for software issues before upgrading,"This tactic works because it allows you to continue using the software without the problematic feature until a more permanent solution, such as an upgrade, can be implemented.",Temporary fix for software issues,Efficiency,4,4,Anecdotal,workaround,Problem Solving,N,nan,nan,nan,nan,nan,2025-08-13,github/hbc-acai,https://github.com/apache/airflow/issues/45186#issuecomment-3185778577,repo: apache/airflow | issue: Task Runner Dails to Update rendered_task_instance_fields | keyword: workaround
Prioritize implementing refresh intervals for data bundles over fixing temporary glitches.,"This approach allows for more efficient use of resources by focusing on long-term solutions that can improve system performance, rather than spending time on temporary issues that may resolve themselves or have minimal impact. Refresh intervals can be customized based on the nature of the data bundle, making the system more flexible and responsive.",Managing data bundle refresh intervals,Efficiency,4,3,Observed,workaround,Resource Management,N,nan,nan,nan,nan,nan,2025-07-30,github/potiuk,https://github.com/apache/airflow/issues/45227#issuecomment-3136348513,repo: apache/airflow | issue: DAG Import Errors message is dangling in web-interface | keyword: workaround
Use the 'Token URL' `api/v1/applications/token` to bypass 404 errors when dealing with airbyte-api SDK issues.,"The 'Token URL' seems to be more reliable in terms of connectivity and can help avoid 404 errors. This workaround is particularly useful when the core problem appears to be from the airbyte-api SDK, rather than from the provider.",Avoiding 404 errors in airbyte-api,Efficiency,3,4,Observed,workaround,Error Handling,N,nan,nan,nan,nan,nan,2024-11-20,github/amardatar,https://github.com/apache/airflow/issues/42520#issuecomment-2489072269,repo: apache/airflow | issue: [Airbyte] Airflow Airbyte provider 4.0 not allowing disabled auth and does not work with auth | keyword: workaround
Use `apache-airflow-providers-airbyte` package version 3.0.0 instead of version >=4.0.0 to avoid authentication issues.,"The version 3.0.0 of the `apache-airflow-providers-airbyte` package does not require authentication, thus bypassing the issue encountered in version >=4.0.0 where authentication is problematic.",Resolving Airflow Airbyte provider issues,Efficiency,3,5,Observed,workaround,Bug Fixing,N,nan,nan,nan,nan,nan,2025-06-23,github/NahidOulmi,https://github.com/apache/airflow/issues/42520#issuecomment-2996404050,repo: apache/airflow | issue: [Airbyte] Airflow Airbyte provider 4.0 not allowing disabled auth and does not work with auth | keyword: workaround
Use StreamingResponse for handling large data to avoid Out Of Memory (OOM) errors.,"StreamingResponse allows data to be sent in chunks, reducing the memory load at any given time. This prevents the system from overloading and crashing due to OOM errors.",Handling large data in webserver,Efficiency,4,4,Observed,workaround,Memory Management,N,nan,nan,nan,nan,nan,2025-06-02,github/jason810496,https://github.com/apache/airflow/pull/49470#issuecomment-2930184615,repo: apache/airflow | issue: Resolve OOM When Reading Large Logs in Webserver | keyword: workaround
Use mocking of attributes instead of caplog for testing,"Mocking attributes provides more control and prevents breaking tests, especially when applying changes to a branch you don't own",Testing changes on unowned branch,Efficiency,4,4,Observed,workaround,Code Testing,N,nan,nan,nan,nan,nan,2025-07-04,github/o-nikolas,https://github.com/apache/airflow/pull/46621#issuecomment-3034009768,repo: apache/airflow | issue: Add support for S3 dag bundle | keyword: gotcha
Use 'merge-multiple' feature and glob pattern to upload each artifact with a different key when migrating to `@v4`,This workaround is necessary because the `@v4` action has a known issue that causes problems for users. Uploading each artifact with a different key and using the 'merge-multiple' feature and glob pattern to download and merge all such uploaded artifacts can circumvent this issue.,Migrating to `@v4` action,Efficiency,3,4,Observed,workaround,Version Migration,N,nan,nan,nan,nan,nan,2024-12-30,github/potiuk,https://github.com/apache/airflow/pull/45289#issuecomment-2565964463,repo: apache/airflow | issue: Improve caching strategy across the board of CI workflow | keyword: gotcha
Use different keys to upload each artifact when migrating to `@v4` to avoid merging issues.,"The `@v4` action has a known feature that causes problems for users when migrating. To circumvent this, each artifact needs to be uploaded with a different key. This allows for the 'merge-multiple' feature and glob pattern to download and merge all uploaded artifacts successfully.",Migrating to `@v4` in CI workflow,Efficiency,3,4,Observed,workaround,CI Workflow Management,N,nan,nan,nan,nan,nan,2024-12-31,github/gopidesupavan,https://github.com/apache/airflow/pull/45289#issuecomment-2566094221,repo: apache/airflow | issue: Improve caching strategy across the board of CI workflow | keyword: gotcha
Use `snowflake.sqlalchemy.URL` instead of `string.format` to build URLs in Snowflake Provider.,Using `snowflake.sqlalchemy.URL` ensures that the URL is constructed in a way that's compatible with Snowflake's requirements and avoids potential errors that could arise from using `string.format`.,Building URLs in Snowflake Provider,Efficiency,4,5,Observed,workaround,Code Optimization,N,nan,nan,nan,nan,nan,2021-12-08,github/mik-laj,https://github.com/apache/airflow/issues/20032#issuecomment-988647949,repo: apache/airflow | issue: Snowflake Provider - Hook's support for not providing a region is broken when using SQLAlchemy | keyword: pro tip
Use `df.filter(cond)` instead of `df[cond]` for more flexible data filtering in pandas.,"The `df.filter(cond)` method provides more flexibility and ease of use in filtering data. It allows for the implementation of 'like' and 'regex' behaviors, which can be more efficient and intuitive than using `df[cond]`. This method can also be used with `.pipe` to create more complex filters.",Data filtering in pandas,Efficiency,4,4,Observed,workaround,Data Analysis,N,nan,nan,nan,nan,nan,2025-04-20,github/datapythonista,https://github.com/pandas-dev/pandas/issues/61317#issuecomment-2817212049,repo: pandas-dev/pandas | issue: ENH: Make DataFrame.filter accept filters in new formats | keyword: best practice
"Avoid using lambda functions in DataFrame filters for row operations, use 'df.filter(df[""col""].str.contains(""xxx""))' instead","Lambda functions operating by row effectively transpose the data, which can lead to inefficiencies and unexpected behaviors due to the single dtype restriction of a Series. Using 'df.filter(df[""col""].str.contains(""xxx""))' provides a more efficient and predictable alternative.",Filtering rows in pandas DataFrame,Efficiency,4,4,Observed,workaround,Data Processing,N,nan,nan,nan,nan,nan,2025-04-22,github/rhshadrach,https://github.com/pandas-dev/pandas/issues/61317#issuecomment-2822457019,repo: pandas-dev/pandas | issue: ENH: Make DataFrame.filter accept filters in new formats | keyword: best practice
"Prioritize backward compatibility when modifying APIs, even if it means maintaining less ideal choices.","Changing APIs can break existing applications that rely on them. Maintaining backward compatibility ensures that changes don't disrupt users' existing workflows, even if it means keeping less ideal choices. This approach can be more user-friendly and prevent loss of users due to disruptive changes.",Modifying existing APIs,Retention,4,5,Observed,rule-of-thumb,User Retention,N,nan,nan,nan,nan,nan,2025-04-23,github/datapythonista,https://github.com/pandas-dev/pandas/issues/61317#issuecomment-2824439041,repo: pandas-dev/pandas | issue: ENH: Make DataFrame.filter accept filters in new formats | keyword: best practice
Avoid running large data manipulation tasks directly as a file script; use Jupyter instead.,"Running large data manipulation tasks directly as a file script can lead to significant memory usage and potential memory leaks. Jupyter, on the other hand, handles memory more efficiently and can help avoid these issues.",Large data manipulation tasks,Efficiency,4,5,Observed,workaround,Data Management,N,nan,nan,nan,nan,nan,2022-11-08,github/mar-ses,https://github.com/pandas-dev/pandas/issues/49582#issuecomment-1307436102,repo: pandas-dev/pandas | issue: PERF: Memory leak when returning subset of DataFrame and deleting the rest | keyword: best practice
"Use pandas DataFrame's `loc` function to add a single row to an existing DataFrame, rather than creating a new DataFrame for the single row and concatenating it.","The `loc` function allows you to directly add a new row to an existing DataFrame, which is more efficient in terms of memory usage and execution time than creating a new DataFrame and concatenating it. This is because creating a new DataFrame and concatenating it requires more computational resources and can slow down the execution of your code, especially when dealing with large data sets.",Adding single row to DataFrame,Efficiency,5,5,Observed,workaround,Data Management,N,nan,nan,nan,nan,nan,2020-07-27,github/achapkowski,https://github.com/pandas-dev/pandas/issues/35378#issuecomment-664239295,repo: pandas-dev/pandas | issue: DOC:  Data Editing Samples/Guide | keyword: best practice
Use binary formats like parquet or HDF5 for data round-tripping instead of CSV,"Binary formats like parquet or HDF5 are schema-based, providing a safer and more reliable method for data round-tripping than schema-less formats like CSV. This reduces the risk of data loss or corruption during the process.",Data round-tripping in business,Risk,4,5,Observed,workaround,Data Management,N,nan,nan,nan,nan,nan,2018-12-28,github/chris-b1,https://github.com/pandas-dev/pandas/issues/24468#issuecomment-450406181,repo: pandas-dev/pandas | issue: read_csv should default to index_col = 0 | keyword: best practice
"Use the `[['column1', 'column2', 'column3']]` syntax instead of `select()` when working with pandas for data manipulation.",This syntax is more familiar to most pandas users and is consistent with the rest of the pandas API. It also allows for more flexibility and control over data manipulation tasks.,Data manipulation in pandas,Efficiency,4,5,Observed,rule-of-thumb,Data Manipulation,N,nan,nan,nan,nan,nan,2025-06-04,github/Dr-Irv,https://github.com/pandas-dev/pandas/pull/61527#issuecomment-2941361233,repo: pandas-dev/pandas | issue: ENH: Implement DataFrame.select | keyword: best practice
Use explicit definitions in technical documentation to avoid ambiguity,"Explicit definitions reduce the need for users to infer rules from examples, which can lead to misunderstandings. This is particularly important in technical documentation where precision is key.",Writing technical documentation,Efficiency,4,5,Observed,rule-of-thumb,Documentation,N,nan,nan,nan,nan,nan,2024-02-06,github/VladimirFokow,https://github.com/pandas-dev/pandas/pull/57273#issuecomment-1929049214,repo: pandas-dev/pandas | issue: DOC: Add notice and example for `CategoricalDtype` with different ``categories_dtype`` | keyword: best practice
Use a global constant or environment variable to manage dependencies on future software updates,This approach allows you to prepare your code for future updates without duplicating tests or code. It also provides flexibility to easily switch between current and future dependencies as needed.,Preparing code for future updates,Efficiency,4,4,Observed,workaround,Software Development,N,nan,nan,nan,nan,nan,2022-09-23,github/cdcadman,https://github.com/pandas-dev/pandas/pull/48576#issuecomment-1256713833,repo: pandas-dev/pandas | issue: Make pandas/io/sql.py work with sqlalchemy 2.0 | keyword: lesson learned
Avoid altering documented functions in pull requests unless necessary,"Changing a documented function can lead to unexpected behavior for users who rely on the existing functionality. It's better to create a new function if the existing one doesn't meet your needs, or to carefully consider the impact of changes on users.",Modifying functions in open-source projects,Risk,4,4,Observed,rule-of-thumb,Code Management,N,nan,nan,nan,nan,nan,2022-10-28,github/cdcadman,https://github.com/pandas-dev/pandas/pull/48576#issuecomment-1294907916,repo: pandas-dev/pandas | issue: Make pandas/io/sql.py work with sqlalchemy 2.0 | keyword: lesson learned
Use `re.escape(...)` for preparing an exact regex match programmatically.,"This method allows you to escape a string in preparation for an exact regex match, which is useful when you want to ensure that special characters in the string are treated as literal characters and not as special regex symbols. This can help prevent unexpected behavior in your code.",Escaping strings for regex match,Efficiency,4,4,Observed,workaround,Code Efficiency,N,nan,nan,nan,nan,nan,2022-08-19,github/tomaarsen,https://github.com/pandas-dev/pandas/issues/48086#issuecomment-1220680487,repo: pandas-dev/pandas | issue: ENH: add `regex=False` option to pandas.Series.str.match and fullmatch (like in str.contains) | keyword: lesson learned
Use 'colspan' and 'rowspan' to handle multi-index data in HTML tables.,"The 'colspan' and 'rowspan' attributes in HTML tables can create virtual cells that are copies of the real cells. This can be useful when dealing with multi-index data, as it allows for a more efficient and accurate representation of the data structure.",Handling multi-index data in HTML,Efficiency,4,4,Observed,workaround,Data Management,N,nan,nan,nan,nan,nan,2018-06-14,github/adamhooper,https://github.com/pandas-dev/pandas/pull/21487,repo: pandas-dev/pandas | keyword: lesson learned | state: closed
Use IntervalIndex for natural representation of grids in simulations and measurements,"Instead of referencing a single value, a grid cell references a range of values, based on the chosen discretization. This allows for more accurate and flexible data representation, especially in physical systems simulations and measurements.",Simulations and measurements representation,Efficiency,4,4,Observed,workaround,Data Representation,N,nan,nan,nan,nan,nan,2014-07-01,github/shoyer,https://github.com/pandas-dev/pandas/issues/7640,repo: pandas-dev/pandas | keyword: lesson learned | state: closed
Use `pd.interval_range` instead of `pd.cut` for creating an IntervalIndex in pandas.,"`pd.cut` returns a CategoricalIndex, which may not be ideal for certain operations that require interval data. The `pd.interval_range` function, on the other hand, directly creates an IntervalIndex, providing a more straightforward and efficient way to handle interval data.",Handling interval data in pandas,Efficiency,4,4,Observed,workaround,Data Analysis,N,nan,nan,nan,nan,nan,2018-05-07,github/blalterman,https://github.com/pandas-dev/pandas/issues/7640#issuecomment-387091110,repo: pandas-dev/pandas | issue: Proposal: New Index type for binned data (IntervalIndex) | keyword: lesson learned
Use SQLAlchemy's ORM part instead of Core for better handling of SQL transactions.,"The ORM part of SQLAlchemy has a 'begin' method and 'execute' method which can handle SQL transactions more efficiently. This is because it provides a Session or connection, which can support temporary tables when using a Connection.",Managing SQL transactions,Efficiency,4,4,Observed,workaround,Database Management,N,nan,nan,nan,nan,nan,2015-07-19,github/jorisvandenbossche,https://github.com/pandas-dev/pandas/pull/10617#issuecomment-122649728,repo: pandas-dev/pandas | issue: support sql transactions | keyword: lesson learned
Use a boolean mask instead of 'where' for the same behavior in data manipulation.,"Using a boolean mask can achieve the same result as 'where' but with less complexity and more efficiency. It's a more direct method of filtering data in pandas, which can improve code readability and maintainability.",Data manipulation in pandas,Efficiency,4,4,Observed,workaround,Data Analysis,N,nan,nan,nan,nan,nan,2016-03-17,github/johne13,https://github.com/pandas-dev/pandas/issues/12648#issuecomment-197675532,repo: pandas-dev/pandas | issue: ENH:  cumcount() for DataFrames and Series | keyword: workaround
Use a try-except block when dealing with infinite or unpredictable datatypes.,"In situations where there are infinite or unpredictable datatypes, it may not be feasible to map all possible types. A try-except block can handle unexpected types, preventing crashes and maintaining program flow.",Handling infinite or unpredictable datatypes,Efficiency,4,4,Observed,workaround,Error Handling,N,nan,nan,nan,nan,nan,2023-05-12,github/danielhanchen,https://github.com/pandas-dev/pandas/issues/53011#issuecomment-1545785525,repo: pandas-dev/pandas | issue: BUG: read_parquet converts pyarrow list type to numpy dtype | keyword: workaround
"Create a bbappend file with the content: SETUPTOOLS_BUILD_ARGS += ""--plat-name ${MACHINE}"" to address item #1.","This workaround creates the wheel using the machine name instead of x86_64, which can help avoid dtype mismatch issues. The ${MACHINE} parameter can be replaced with TUNE_ARCH to include the CPU type, if needed.",Avoiding Buffer dtype mismatch,Efficiency,3,4,Observed,workaround,Bug Fixing,N,nan,nan,nan,nan,nan,2023-10-13,github/scinteeb,https://github.com/pandas-dev/pandas/issues/55305#issuecomment-1761390072,"repo: pandas-dev/pandas | issue: BUG: ValueError: Buffer dtype mismatch, expected 'intp_t' but got 'long long' on ARMv7 32 bit | keyword: workaround"
Use the transpose method (.T) before applying the correlation method (.corr()) to calculate correlation among rows in a DataFrame.,"Pandas DataFrame.corr() method calculates the pairwise correlation of columns by default. To calculate the correlation among rows, you need to transpose the DataFrame first, which swaps rows and columns.",Calculating row-wise correlation,Efficiency,4,5,Peer-validated,workaround,Data Analysis,N,nan,nan,nan,nan,nan,2020-06-26,github/alexlenail,https://github.com/pandas-dev/pandas/issues/35002,repo: pandas-dev/pandas | keyword: workaround | state: open
Use `combine_chunks()` to consolidate underlying arrays when deep copying is not required,"This method is a workaround for the issue where `copy` returns a shallow copy due to the underlying array's immutability. By using `combine_chunks()`, you can create a consolidated array without preserving the original chunking layout, thus bypassing the need for a deep copy.",Deep copying immutable underlying arrays,Efficiency,4,4,Observed,workaround,Data Management,N,nan,nan,nan,nan,nan,2025-07-23,github/mroeschke,https://github.com/pandas-dev/pandas/issues/61930#issuecomment-3109392476,repo: pandas-dev/pandas | issue: PERF: `DataFrame.copy(deep=True)` returns a view on the original pyarrow buffer | keyword: workaround
Use alternative features when main ones are deprecated or buggy,"In software development, features can sometimes be deprecated or contain bugs that hinder their functionality. By using alternative features, you can bypass these issues and maintain productivity.","Software development, bug workaround",Efficiency,4,4,Observed,workaround,Bug Resolution,N,nan,nan,nan,nan,nan,2021-07-01,github/mzeitlin11,https://github.com/pandas-dev/pandas/issues/41930#issuecomment-872571665,repo: pandas-dev/pandas | issue: BUG: pd.Grouper cannot be reused in some cases  | keyword: workaround
"Use ``` pandas.set_option('future.no_silent_downcasting', True) ``` to retain object dtype in pandas 3.0","This setting prevents automatic downcasting to int64, allowing you to maintain the original data type of your pandas series. It's a workaround to a change in pandas 3.0 that may not be desirable for all use cases.",Retaining object dtype in pandas,Efficiency,4,5,Observed,workaround,Data Management,N,nan,nan,nan,nan,nan,2024-03-06,github/phofl,https://github.com/pandas-dev/pandas/issues/57734#issuecomment-1981871396,repo: pandas-dev/pandas | issue: QST: How to solve pandas (2.2.0) 'FutureWarning: Downcasting behavior in `replace` is deprecated' on a Series? | keyword: workaround
Use 'map' function instead of 'replace' for casting categorical variables in pandas,"The 'replace' function in pandas was previously casting your dtypes, but it will stop doing so in future versions. Using the 'map' function instead allows you to maintain control over dtype casting, making your code more future-proof and less prone to unexpected behavior.",Casting categorical variables in pandas,Efficiency,4,5,Observed,workaround,Data Processing,N,nan,nan,nan,nan,nan,2024-03-13,github/buhtz,https://github.com/pandas-dev/pandas/issues/57734#issuecomment-1994220779,repo: pandas-dev/pandas | issue: QST: How to solve pandas (2.2.0) 'FutureWarning: Downcasting behavior in `replace` is deprecated' on a Series? | keyword: workaround
Use pandas Categorical codes to convert string data into integer format instead of using .replace,"This workaround is effective because pandas Categorical codes provide a way to encode string data as integers, which can be useful when working with machine learning algorithms that require numerical input. This method avoids the FutureWarning associated with downcasting behavior in .replace.",Converting string data to integers,Efficiency,4,4,Observed,workaround,Data Preprocessing,N,nan,nan,nan,nan,nan,2024-03-13,github/jerome-white,https://github.com/pandas-dev/pandas/issues/57734#issuecomment-1994448905,repo: pandas-dev/pandas | issue: QST: How to solve pandas (2.2.0) 'FutureWarning: Downcasting behavior in `replace` is deprecated' on a Series? | keyword: workaround
Use 'pd.option_context' when dealing with NA values in pandas dataframes to avoid FutureWarning,"The 'pd.option_context' allows for temporary setting of pandas options within a context, which can help in dealing with NA values in dataframes without triggering a FutureWarning. This is a workaround for the deprecated downcasting behavior in 'replace' on a Series.",Handling NA values in pandas,Efficiency,4,5,Observed,workaround,Data Cleaning,N,nan,nan,nan,nan,nan,2024-08-08,github/daviewales,https://github.com/pandas-dev/pandas/issues/57734#issuecomment-2274836151,repo: pandas-dev/pandas | issue: QST: How to solve pandas (2.2.0) 'FutureWarning: Downcasting behavior in `replace` is deprecated' on a Series? | keyword: workaround
Use map() instead of replace() when needing to change dtypes and handle null values in pandas.,"The map() function allows for more granular control and avoids warnings that can occur with the replace() function. It can handle both dtype conversion and null value management in a single operation, improving code readability and efficiency.","Changing dtypes, handling null values",Efficiency,4,5,Observed,workaround,Data Cleaning,N,nan,nan,nan,nan,nan,2025-01-07,github/SamLovesHoneyWater,https://github.com/pandas-dev/pandas/issues/57734#issuecomment-2574215022,repo: pandas-dev/pandas | issue: QST: How to solve pandas (2.2.0) 'FutureWarning: Downcasting behavior in `replace` is deprecated' on a Series? | keyword: workaround
"Use 'pandas.set_option(""future_no_silent_downcasting"", True)' to retain object dtype in pandas 3.0 instead of casting to int64","This workaround prevents automatic downcasting in pandas 3.0, which could lead to data loss or incorrect data types. It's a proactive measure to ensure data integrity when upgrading pandas.",Preventing automatic downcasting in pandas,Risk,4,5,Observed,workaround,Data Integrity,N,nan,nan,nan,nan,nan,2025-08-13,github/randomseed42,https://github.com/pandas-dev/pandas/issues/57734#issuecomment-3182838142,repo: pandas-dev/pandas | issue: QST: How to solve pandas (2.2.0) 'FutureWarning: Downcasting behavior in `replace` is deprecated' on a Series? | keyword: workaround
Use the 'bool_fillna_inplace' function as a workaround for replacing NaN/None with False in pandas series.,The pandas library sometimes has issues handling NaN/None values in boolean series. This workaround provides a way to handle these values and ensure the series remains boolean.,Handling NaN/None in boolean series,Efficiency,3,4,Observed,workaround,Data Cleaning,N,nan,nan,nan,nan,nan,2024-11-26,github/joaoe,https://github.com/pandas-dev/pandas/issues/59831#issuecomment-2500704786,repo: pandas-dev/pandas | issue: ENH: Restore the functionality of `.fillna` | keyword: workaround
Use different regex libraries for different tasks when necessary.,Different regex libraries may have different strengths and weaknesses. Using the right one for the task can improve efficiency and results.,Handling regex in different libraries,Efficiency,3,4,Anecdotal,workaround,Code Efficiency,N,nan,nan,nan,nan,nan,2019-07-26,github/TomAugspurger,https://github.com/pandas-dev/pandas/issues/22496#issuecomment-515518510,repo: pandas-dev/pandas | issue: Add support for 'regex' library | keyword: gotcha
Use re2 library with the apply method for faster regular expressions in pandas.,"The apply method is typically slow, but the execution time of re2 is significantly faster, making this combination more efficient for handling regular expressions in pandas.",Speeding up regular expressions in pandas,Efficiency,4,4,Observed,workaround,Data Processing,N,nan,nan,nan,nan,nan,2025-03-04,github/ptth222,https://github.com/pandas-dev/pandas/issues/22496#issuecomment-2698608729,repo: pandas-dev/pandas | issue: Add support for 'regex' library | keyword: gotcha
Use `memory_usage(deep=True)` instead of nbytes for accurate memory usage in Pandas,"The nbytes method may provide misleading information about memory usage, especially for object data types. The `memory_usage(deep=True)` method provides a more accurate estimate.",Estimating memory usage in Pandas,Efficiency,4,5,Observed,workaround,Data Analysis,N,nan,nan,nan,nan,nan,2022-09-07,github/tehunter,https://github.com/pandas-dev/pandas/issues/48438,repo: pandas-dev/pandas | keyword: gotcha | state: open
Use `astype(bytes)` with caution in pandas to avoid data loss,"The pandas library's `astype(bytes)` function can lead to data loss when roundtripping data through pandas dataframes. This is due to the function's default behavior, which may not preserve all data types correctly. It's better to use a more specific function or method that guarantees data preservation.",Data roundtripping in pandas,Risk,3,4,Observed,warning,Data Management,N,nan,nan,nan,nan,nan,2024-04-13,github/WillAyd,https://github.com/pandas-dev/pandas/issues/58205#issuecomment-2053676181,repo: pandas-dev/pandas | issue: BUG: Roundtripping bytes through pandas dataframes leads to data loss | keyword: gotcha
Use `__iter__` to iterate over the index in Series and DataFrames.,Both Series and DataFrames are data structures with a well-defined order. Users expect to be able to iterate over them. Using `__iter__` to iterate over the index aligns with this expectation and the dictionary-analogy of Series.,Iterating over Series and DataFrames,Efficiency,4,5,Observed,workaround,Data Management,N,nan,nan,nan,nan,nan,2023-07-10,github/rhshadrach,https://github.com/pandas-dev/pandas/issues/14235#issuecomment-1629652870,repo: pandas-dev/pandas | issue: BUG: Python operator 'in' behaves in two different ways on Series object | keyword: gotcha
Use BytesIO and gzip for in-memory data compression when saving to disk is not ideal,"This method allows for data compression without relying on the end user's local environment, making it more portable and less dependent on specific system configurations.",In-memory data compression,Efficiency,4,4,Observed,workaround,Data Management,N,nan,nan,nan,nan,nan,2018-09-06,github/ZaxR,https://github.com/pandas-dev/pandas/issues/22555#issuecomment-418958420,repo: pandas-dev/pandas | issue: In-memory to_csv compression | keyword: gotcha
Use tuples instead of lists for single labels of a MultiIndex in pandas to avoid confusion.,"In pandas, tuples are used to indicate labels of a MultiIndex. Using a list in this case can cause confusion and errors, as it becomes difficult to distinguish between the different levels of the MultiIndex.",Labeling MultiIndex in pandas,Efficiency,3,4,Observed,workaround,Data Management,N,nan,nan,nan,nan,nan,2018-02-01,github/jorisvandenbossche,https://github.com/pandas-dev/pandas/issues/16943#issuecomment-362248941,repo: pandas-dev/pandas | issue: MultiIndex row indexing with .loc fail with tuple but work with list of indices | keyword: gotcha
Use global constants or environment variables to handle future changes in dependencies.,This approach allows you to prepare your code for future changes in dependencies without duplicating tests or code. It provides flexibility and maintainability as you can adjust the global constant or environment variable when the dependency update is released.,Preparing code for dependency updates,Efficiency,4,4,Observed,workaround,Code Maintenance,N,nan,nan,nan,nan,nan,2022-09-23,github/cdcadman,https://github.com/pandas-dev/pandas/pull/48576#issuecomment-1256713833,repo: pandas-dev/pandas | issue: Make pandas/io/sql.py work with sqlalchemy 2.0 | keyword: gotcha
Avoid changing the return type of a documented function in a public API unless necessary.,Changing the return type of a function in a public API can break existing code that depends on the original return type. This can lead to unexpected issues for users of the API and increase maintenance overhead.,Modifying public API functions,Risk,4,5,Observed,rule-of-thumb,Code Maintenance,N,nan,nan,nan,nan,nan,2022-10-28,github/cdcadman,https://github.com/pandas-dev/pandas/pull/48576#issuecomment-1294907916,repo: pandas-dev/pandas | issue: Make pandas/io/sql.py work with sqlalchemy 2.0 | keyword: gotcha
Use breakpoint() instead of ValueError to track down call arguments,"Using breakpoint() allows you to pause program execution at a certain point and inspect variables, which can be more effective than ValueError for debugging. ValueError only provides an error message, while breakpoint() allows you to interactively explore the state of the program.",Debugging complex software,Efficiency,4,4,Observed,workaround,Debugging,N,nan,nan,nan,nan,nan,2021-02-09,github/jbrockmendel,https://github.com/pandas-dev/pandas/issues/39585#issuecomment-775555273,repo: pandas-dev/pandas | issue: Intermittent error fetching value from multi-indexed dataframe | keyword: gotcha
Use a minimally invasive approach to fix bugs by checking for extreme values before scaling.,"This approach avoids introducing unnecessary changes into the codebase, reducing the risk of causing other issues. It also makes the code easier to understand and maintain.",Fixing bugs in numerical calculations,Efficiency,4,4,Observed,workaround,Bug Fixing,N,nan,nan,nan,nan,nan,2024-02-16,github/robert-schmidtke,https://github.com/pandas-dev/pandas/pull/57314#issuecomment-1948430840,repo: pandas-dev/pandas | issue: BUG: Fix near-minimum timestamp handling | keyword: gotcha
Prioritize open-source contributions to reduce overall workload,"Contributing to open-source projects, even if it seems like additional work, can ultimately reduce your overall workload. This is because the improvements you make can be utilized by others, reducing the need for duplicate efforts and fostering a collaborative environment where others can also contribute to your projects.",Open-source project management,Efficiency,4,4,Anecdotal,rule-of-thumb,Collaboration,N,nan,nan,nan,nan,nan,2022-03-01,github/KOLANICH,https://github.com/pandas-dev/pandas/issues/44453#issuecomment-1055636670,repo: pandas-dev/pandas | issue: BLD: remove support for 32 bit | keyword: pro tip
Use 'containerRestarting' instead of 'containerRestarted' as an event reason in Kubernetes.,The 'containerRestarting' event reason provides a more accurate representation of the situation where a container restart fails once or twice before successfully starting. It reduces confusion and overlap with 'containerStarted' and 'containerDied' events.,Managing container events in Kubernetes,Efficiency,4,5,Observed,workaround,Code Management,N,nan,nan,nan,nan,nan,2025-02-05,github/Ritikaa96,https://github.com/kubernetes/kubernetes/pull/126474#issuecomment-2635725354,repo: kubernetes/kubernetes | issue: publish an event when the container is restarted | keyword: best practice
Use specific annotation prefixes in Kubernetes to control node autoscaling,"Using specific annotation prefixes allows for more granular control over node autoscaling. It differentiates between pods not safe to evict by autoscalers and those not safe to evict by any standard draining mechanism, enabling more efficient resource management.",Managing Kubernetes node autoscaling,Efficiency,4,4,Observed,rule-of-thumb,Resource Management,N,nan,nan,nan,nan,nan,2024-07-09,github/MaciekPytel,https://github.com/kubernetes/kubernetes/pull/124800#issuecomment-2218288529,repo: kubernetes/kubernetes | issue: Define a common Node autoscaling safe-to-evict/do-not-disrupt annotation | keyword: best practice
Prioritize error tracking even during debug information collection,Errors during the debug information collection process can provide valuable insights into the root cause of issues. Ignoring these can lead to missed opportunities for problem resolution.,Debugging software issues,Efficiency,4,4,Anecdotal,rule-of-thumb,Error Management,N,nan,nan,nan,nan,nan,2024-11-07,github/aojea,https://github.com/kubernetes/kubernetes/issues/128655#issuecomment-2462702572,repo: kubernetes/kubernetes | issue: Failure cluster [245f6915...]: Networking Granular Checks: Services should update endpoints: http | keyword: lesson learned
Use `forbidigo` to prevent new usage of unwanted dependencies instead of rewriting them.,"`forbidigo` is a linter that forbids certain identifiers. By using it, you can prevent new usages of unwanted dependencies, which is more efficient than rewriting existing ones. This approach allows you to maintain control over your codebase and ensure that unwanted dependencies do not proliferate.",Managing unwanted code dependencies,Efficiency,4,4,Observed,workaround,Code Management,N,nan,nan,nan,nan,nan,2025-08-14,github/BenTheElder,https://github.com/kubernetes/kubernetes/issues/129652#issuecomment-3186234245,repo: kubernetes/kubernetes | issue: Remove the MD5 hash function for FIPS compliance | keyword: workaround
Use a local caching proxy as a point of failure instead of the remote registry,"By making the local caching proxy the point of failure, you can mitigate the risk of remote registry unavailability affecting your operations. This is especially useful when dealing with mutable tags that may not be supported by the remote registry.",Mitigating remote registry unavailability,Risk,4,3,Observed,workaround,Risk Management,N,nan,nan,nan,nan,nan,2023-11-07,github/Alibirb,https://github.com/kubernetes/kubernetes/issues/111822#issuecomment-1800277335,repo: kubernetes/kubernetes | issue: imagePullPolicy to pull latest image OR use existing image if repository unavailable | keyword: workaround
Use Multi-Process Service (MPS) to allow multiple processes to share a single GPU.,"By default, kernels from different processes can't run on one GPU simultaneously. They are time sliced. The Pascal architecture brings instruction-level preemption instead of block-level preemption, but context switches are not free. Also, there is no way of partitioning GPU resources (SMs, memory), or even assigning priorities when sharing a card. MPS allows for better resource allocation and management.",Sharing GPU to multiple containers,Efficiency,3,4,Observed,workaround,Resource Management,N,nan,nan,nan,nan,nan,2017-09-20,github/RenaudWasTaken,https://github.com/kubernetes/kubernetes/issues/52757#issuecomment-330766518,repo: kubernetes/kubernetes | issue: Is sharing GPU to multiple containers feasible? | keyword: workaround
"Create a new 'availability zone' with desired storage characteristics, migrate data, then destroy the old zone when dealing with limitations on elasticsearch.","This workaround allows for changes in storage characteristics without running into issues with EBS volumes being unable to be assigned due to being in the wrong availability zone. By creating a new 'availability zone' with the desired characteristics, data can be migrated smoothly without disruption.",Elasticsearch storage characteristic changes,Efficiency,4,4,Observed,workaround,Data Management,N,nan,nan,nan,nan,nan,2019-02-22,github/DaveWHarvey,https://github.com/kubernetes/kubernetes/issues/68737#issuecomment-466514840,repo: kubernetes/kubernetes | issue: StatefulSet: support resize pvc storage in K8s v1.11 | keyword: workaround
Use built-in immutability validation for root resources to avoid sub-par validation issues.,"This tactic works because built-in immutability validation provides a more robust validation mechanism for root resources, reducing the likelihood of errors and improving the overall quality of the data.",Improving data validation in root resources,Efficiency,4,4,Observed,workaround,Data Validation,N,nan,nan,nan,nan,nan,2024-01-24,github/jpbetz,https://github.com/kubernetes/kubernetes/issues/122163#issuecomment-1907223578,repo: kubernetes/kubernetes | issue: Consider allowing CEL validation of metadata.namespace field of embedded resource | keyword: workaround
Use a combination of Kubernetes' PodDisruptionBudget (PDB) and Horizontal Pod Autoscaler (HPA) to maintain minimum pod availability during node drains.,"By setting a PDB, you can ensure a minimum number of pods are always available. However, during a `kubectl drain`, you may hit the PDB limit and be unable to evict further pods. By also using an HPA, you can automatically scale up your pods before the drain, ensuring you have enough pods to maintain your service while staying within the PDB limits.",Maintaining service during Kubernetes node drains,Efficiency,3,4,Observed,workaround,Service Availability,N,nan,nan,nan,nan,nan,2022-09-26,github/ldemailly,https://github.com/kubernetes/kubernetes/issues/93476#issuecomment-1258433810,repo: kubernetes/kubernetes | issue: Allow scaling up to meet PDB constraints | keyword: workaround
"Avoid changing the secret type in Kubernetes environment variables directly. Instead, create a new variable with the desired secret type.","Changing the secret type of an existing environment variable can lead to invalid configurations, as Kubernetes does not allow a variable to have both a 'value' and a 'valueFrom' field. Creating a new variable avoids this conflict.",Managing environment variables in Kubernetes,Efficiency,4,5,Observed,workaround,DevOps,N,nan,nan,nan,nan,nan,2020-04-22,github/Thematrixme,https://github.com/kubernetes/kubernetes/issues/46861#issuecomment-617838488,"repo: kubernetes/kubernetes | issue: ENV invalid: spec.template.spec.containers[0].env[14].valueFrom: Invalid value: """": may not be specified when `value` is not empty | keyword: workaround"
Use `kubectl edit <DEPLOYMENT>` to remove literally defined Environment vars before applying new deployment with secret-defined vars.,The Kubernetes deployment fails when Environment vars are defined both literally and in the secret. Removing the literal definitions before applying the new deployment resolves the conflict.,Resolving Kubernetes deployment failure,Efficiency,4,4,Observed,workaround,Deployment Management,N,nan,nan,nan,nan,nan,2020-06-12,github/MortezaHosseini,https://github.com/kubernetes/kubernetes/issues/46861#issuecomment-643101281,"repo: kubernetes/kubernetes | issue: ENV invalid: spec.template.spec.containers[0].env[14].valueFrom: Invalid value: """": may not be specified when `value` is not empty | keyword: workaround"
Avoid using 'kubectl apply' after 'kubectl create' for the same Kubernetes resource,"The data structures for 'kubectl create' and 'kubectl apply' are slightly different, which can cause conflicts when updating resources. Instead, use 'kubectl replace' or 'kubectl edit' to update resources created with 'kubectl create'.",Updating Kubernetes resources,Efficiency,4,5,Observed,workaround,DevOps,N,nan,nan,nan,nan,nan,2020-10-05,github/immortalize,https://github.com/kubernetes/kubernetes/issues/46861#issuecomment-703858205,"repo: kubernetes/kubernetes | issue: ENV invalid: spec.template.spec.containers[0].env[14].valueFrom: Invalid value: """": may not be specified when `value` is not empty | keyword: workaround"
Prioritize network adequacy when troubleshooting service mesh issues.,"The network is often overlooked, but it's a common denominator in many setups and can be the root cause of service mesh issues. Providers like DO or Google Cloud rarely have these issues, indicating a strong network is key.",Troubleshooting service mesh issues,Efficiency,4,4,Observed,workaround,Network Troubleshooting,N,nan,nan,nan,nan,nan,2021-04-30,github/gridworkz,https://github.com/kubernetes/kubernetes/issues/61117#issuecomment-830231248,repo: kubernetes/kubernetes | issue: PLEG is not healthy | keyword: workaround
"Create a new chain linking services chain to service-ports chain if destination address matches any of cluster, loadbalancer, or external IP, then add a rule to match on service port verdict map in this new chain and reject if nothing matches.","This approach allows for more granular control over service IP port connections, reducing the risk of unauthorized access through invalid ports. By creating a separate chain for service ports and setting specific rules, you can ensure that only valid connections are accepted.",Managing Kubernetes service IP connections,Risk,4,3,Observed,workaround,Network Security,N,nan,nan,nan,nan,nan,2024-01-10,github/aroradaman,https://github.com/kubernetes/kubernetes/issues/122572#issuecomment-1884474235,repo: kubernetes/kubernetes | issue: nftables kube-proxy TODO | keyword: workaround
Prioritize object-versioning over resource-versioning in cross-object ordering,"Object-versioning allows for more precise control and predictability in cross-object ordering scenarios. It ensures that you wait for a specific object to reach a certain version, rather than waiting for any object to reach a certain resource version. This reduces the risk of unexpected behavior or errors.",Cross-object ordering in coding,Efficiency,4,4,Observed,workaround,Coding Efficiency,N,nan,nan,nan,nan,nan,2022-09-22,github/lavalamp,https://github.com/kubernetes/kubernetes/issues/112684#issuecomment-1255537283,repo: kubernetes/kubernetes | issue: RV vs object-wide logical clock | keyword: gotcha
Avoid overcomplicating solutions with unnecessary steps and modifications.,"Simpler solutions are easier to implement, maintain, and troubleshoot. Overcomplicated solutions can introduce unnecessary complexity and potential points of failure.",Developing software features,Efficiency,4,4,Observed,rule-of-thumb,Software Development,N,nan,nan,nan,nan,nan,2016-04-30,github/thockin,https://github.com/kubernetes/kubernetes/issues/24957#issuecomment-215940195,repo: kubernetes/kubernetes | issue: Feature request: A way to signal pods | keyword: gotcha
Avoid overlapping concepts in product development to increase efficiency.,"Overlapping concepts can lead to confusion, redundancy, and wasted resources. By focusing on a single, comprehensive solution, you can streamline the development process and create a more cohesive product.",Product development and design,Efficiency,4,4,Observed,rule-of-thumb,Product Development,N,nan,nan,nan,nan,nan,2016-04-30,github/bprashanth,https://github.com/kubernetes/kubernetes/issues/24957#issuecomment-215940594,repo: kubernetes/kubernetes | issue: Feature request: A way to signal pods | keyword: gotcha
Use notifiers attached to configmap changes to signal pods,This approach allows for more granular control and avoids the risk of overlapping concepts that can result from using a straight signal. It also increases the utility of the configmap by leveraging it as a communication tool.,Signaling pods in Kubernetes,Efficiency,4,4,Observed,workaround,System Configuration,N,nan,nan,nan,nan,nan,2016-04-30,github/thockin,https://github.com/kubernetes/kubernetes/issues/24957#issuecomment-215940810,repo: kubernetes/kubernetes | issue: Feature request: A way to signal pods | keyword: gotcha
Use 'in-flight claim' maps instead of 'assume cache' for handling local modifications in dynamicresource plugins.,"This approach avoids the root cause of race conditions that arise from storing a locally modified copy of the object in the 'assume cache'. The 'in-flight claim' map provides a safer alternative for local modifications, reducing the risk of conflicts and ensuring smoother plugin operation.",Handling local modifications in plugins,Risk,4,4,Observed,workaround,Conflict Management,N,nan,nan,nan,nan,nan,2024-04-20,github/pohly,https://github.com/kubernetes/kubernetes/issues/118612#issuecomment-2067619788,repo: kubernetes/kubernetes | issue: DRA: integration with cluster autoscaler | keyword: gotcha
"Use Ubuntu 18.04.6 LTS instead of Ubuntu 22.04 when installing kubelet, kubeadm, and kubectl to avoid 'Nameserver limits exceeded' error.","Ubuntu 18.04.6 LTS has been observed to work well with these installations, while Ubuntu 22.04 has been reported to cause issues. This could be due to differences in the way the two versions handle DNS servers.","Installing kubelet, kubeadm, kubectl",Efficiency,3,5,Observed,workaround,System Installation,N,nan,nan,nan,nan,nan,2024-03-22,github/Omar-Bensalah,https://github.com/kubernetes/kubernetes/issues/118461#issuecomment-2016090391,repo: kubernetes/kubernetes | issue: kube-proxy pods continuously CrashLoopBackOff | keyword: pro tip
"Use crictl commands to manually remove old, dead pods before attempting a reinstall.","Old, dead pods from previous versions can interfere with the system's operation, leading to error messages and crashes. Manually removing these pods using crictl commands can help keep the system clean and prevent these issues.",Preventing system crashes in Kubernetes,Efficiency,4,4,Observed,workaround,System Maintenance,N,nan,nan,nan,nan,nan,2024-04-09,github/bsdero,https://github.com/kubernetes/kubernetes/issues/118461#issuecomment-2046154559,repo: kubernetes/kubernetes | issue: kube-proxy pods continuously CrashLoopBackOff | keyword: pro tip
Use a `yaml` file with a reverse proxy when needing to create a proxy pass to a backend in a React JS app.,This tactic allows the React JS app to communicate with the backend while avoiding direct exposure of the backend to the client. It also enables the handling of cross-origin resource sharing (CORS) issues which are common in such configurations.,React JS app backend communication,Efficiency,4,4,Observed,workaround,Backend Communication,N,nan,nan,nan,nan,nan,2024-06-26,github/tomasmalio,https://github.com/kubernetes/kubernetes/issues/118461#issuecomment-2191029979,repo: kubernetes/kubernetes | issue: kube-proxy pods continuously CrashLoopBackOff | keyword: pro tip
Use specific directives instead of generic permissions in code testing,"Specific directives like 'ok to test' provide clear instructions to admins, reducing the risk of misinterpretation or incorrect actions. This is especially important in code testing where incorrect actions can lead to bugs or system failures.",Code testing in collaborative projects,Efficiency,4,4,Observed,rule-of-thumb,Code Testing,N,nan,nan,nan,nan,nan,2016-07-05,github/k8s-bot,https://github.com/kubernetes/kubernetes/pull/28509#issuecomment-230594762,repo: kubernetes/kubernetes | issue: Update HumanResourcePrinter signature w single PrintOptions param | keyword: pro tip
Use specific commands for testing approval in collaborative coding projects.,"Using specific commands like 'ok to test' ensures that only authorized admins can approve testing, reducing the risk of unauthorized changes. This also helps maintain code integrity and prevents potential security breaches.",Collaborative coding project testing,Risk,4,5,Observed,rule-of-thumb,Code Management,N,nan,nan,nan,nan,nan,2016-07-07,github/k8s-bot,https://github.com/kubernetes/kubernetes/pull/28509#issuecomment-230994143,repo: kubernetes/kubernetes | issue: Update HumanResourcePrinter signature w single PrintOptions param | keyword: pro tip
Use data-testid instead of aria-label for test selectors,"Using aria-label attribute for both describing UI elements and creating selectors for tests can hamper accessibility due to overuse of labels that may not be useful or up-to-date. Instead, using data-testid for test selectors can improve accessibility and maintainability.",UI testing and accessibility improvement,Efficiency,4,5,Observed,workaround,UI Testing,N,nan,nan,nan,nan,nan,2021-07-07,github/joshhunt,https://github.com/grafana/grafana/issues/36523,repo: grafana/grafana | keyword: best practice | state: open
Use Discord's compatibility with Slack Webhooks to configure Grafana notifications,"This workaround allows you to leverage the compatibility between Discord and Slack Webhooks to set up Grafana notifications. By appending '/slack' to the Discord webhook URL, you can post a Slack-style message to the Discord webhook, which it accepts and formats correctly.",Configuring Grafana notifications via Discord,Efficiency,4,4,Anecdotal,workaround,Communication Tools,N,nan,nan,nan,nan,nan,2024-10-08,github/Mydayyy,https://github.com/grafana/grafana/issues/86565#issuecomment-2400599992,repo: grafana/grafana | issue: Alerting: Discord alert message is above the title | keyword: workaround
Use message content instead of embed for Discord alerts in Grafana to avoid markdown issues.,Embeds in Discord alerts can cause issues when the message includes Discord markdown. Using the message content directly bypasses this problem.,Grafana Discord alert markdown issues,Efficiency,3,4,Observed,workaround,Bug Fixing,N,nan,nan,nan,nan,nan,2024-10-19,github/cwchristerw,https://github.com/grafana/grafana/issues/86565#issuecomment-2423648786,repo: grafana/grafana | issue: Alerting: Discord alert message is above the title | keyword: workaround
Use Discord's compatibility with Slack Webhooks to configure Grafana notifications,"This workaround allows you to leverage Discord's Slack compatibility to receive Grafana notifications. By appending '/slack' to the Discord webhook URL, you can send Slack-style messages to Discord, which are formatted correctly.",Configuring Grafana notifications via Discord,Efficiency,4,3,Anecdotal,workaround,Notification Management,N,nan,nan,nan,nan,nan,2025-01-23,github/erkston,https://github.com/grafana/grafana/issues/86565#issuecomment-2611087544,repo: grafana/grafana | issue: Alerting: Discord alert message is above the title | keyword: workaround
Use the 'description' field instead of 'content' for Discord alert messages,"This tactic works because Discord's API places the 'content' field above the title, which can lead to confusion. By using the 'description' field instead, the alert message appears below the title, improving readability and comprehension.",Improving Discord alert message placement,Efficiency,4,5,Observed,workaround,Communication Management,N,nan,nan,nan,nan,nan,2025-08-16,github/khj68,https://github.com/grafana/grafana/issues/86565#issuecomment-3193703861,repo: grafana/grafana | issue: Alerting: Discord alert message is above the title | keyword: workaround
Use 'Outer join' before 'Reduce' and 'Last*' instead of 'mean' in Grafana transformations,"This workaround helps to correctly display values in Grafana transformations, avoiding the issue of incorrect values being shown.",Grafana transformations showing incorrect values,Efficiency,3,4,Observed,workaround,Data Visualization,N,nan,nan,nan,nan,nan,2024-07-26,github/atsai1220,https://github.com/grafana/grafana/issues/44791#issuecomment-2253176909,repo: grafana/grafana | issue: Reduce tranformations shows incorrect values | keyword: workaround
Use 'Rename field' transformation before 'Grouping to matrix' when dealing with table data in Grafana.,"This workaround prevents the name of the Cell value field from appearing in the header instead of the value referred by the Column name. By renaming the field first, the 'Grouping to matrix' transformation can correctly identify the desired header.",Grafana table data transformation,Efficiency,3,4,Observed,workaround,Data Visualization,N,nan,nan,nan,nan,nan,2024-05-03,github/danialre,https://github.com/grafana/grafana/issues/87332,repo: grafana/grafana | keyword: workaround | state: open
Use 'Fields with name' override to correct display names in tables,"This workaround allows you to select by name and change the display, even when the config.displayName is incorrect. It bypasses the issue by using the correct 'name' field instead of relying on the faulty config.displayName.",Correcting table display names,Efficiency,4,4,Anecdotal,workaround,Data Management,N,nan,nan,nan,nan,nan,2024-09-26,github/jlangy,https://github.com/grafana/grafana/issues/87332#issuecomment-2377906053,repo: grafana/grafana | issue: Transformation: Grouping to matrix header incorrect | keyword: workaround
Use the 'transpose' transformation in Grafana to fix incorrect matrix header grouping.,"The 'transpose' transformation in Grafana 11.3.1 corrects the field name, fixing the issue of incorrect matrix header grouping. This is followed by inverting the column & row, and changing the type for the Time field, which requires two casts (number then time).",Fixing incorrect matrix header grouping,Efficiency,3,4,Observed,workaround,Data Visualization,N,nan,nan,nan,nan,nan,2024-12-04,github/Stormshield-robinc,https://github.com/grafana/grafana/issues/87332#issuecomment-2516922882,repo: grafana/grafana | issue: Transformation: Grouping to matrix header incorrect | keyword: workaround
Use unique aliases for each alert when multiple Grafana instances use the same Opsgenie API key,"Using unique aliases for each alert prevents all alerts from opening only one Opsgenie ticket, thus ensuring each alert is treated as a separate incident and not overlooked",Managing multiple Grafana alerts,Risk,4,5,Observed,workaround,Incident Management,N,nan,nan,nan,nan,nan,2022-08-23,github/ZoharZrihen,https://github.com/grafana/grafana/issues/30080#issuecomment-1224058630,repo: grafana/grafana | issue: Allow a custom prefix for OpsGenie notifications | keyword: workaround
Use 'rpmrebuild' to change 'freetype' to 'libfreetype.so.6()(64bit)' for successful rpm installation on SLES.,"The original 'freetype' may not be compatible with SLES, causing installation issues. Changing it to 'libfreetype.so.6()(64bit)' using 'rpmrebuild' resolves this compatibility issue, allowing for successful installation.",Installing rpm on SLES,Efficiency,3,4,Observed,workaround,Software Installation,N,nan,nan,nan,nan,nan,2024-06-05,github/jhansonhpe,https://github.com/grafana/grafana/issues/53909#issuecomment-2150751759,repo: grafana/grafana | issue: Cannot install grafana rpm in SLES | keyword: workaround
Use absolute paths in GitSync to avoid file location issues,"GitSync may not correctly identify file locations when relative paths are used, leading to errors. Using absolute paths ensures GitSync can find the correct file location, avoiding these issues.",GitSync file location errors,Efficiency,4,4,Anecdotal,workaround,Bug Fixing,N,nan,nan,nan,nan,nan,2025-06-27,github/CaffeineDuck,https://github.com/grafana/grafana/issues/105092#issuecomment-3012016112,"repo: grafana/grafana | issue: GitSync provisioning in v12: ""get client for kind: the server could not find the requested resource"" | keyword: workaround"
Use environment variables as a temporary workaround when dealing with software configuration issues.,Environment variables can be used to override certain settings in the software configuration. This is particularly useful when a bug or regression prevents the normal configuration method from working.,Software configuration issue workaround,Efficiency,4,4,Observed,workaround,Software Development,N,nan,nan,nan,nan,nan,2025-08-06,github/joshhunt,https://github.com/grafana/grafana/issues/108808#issuecomment-3160570136,repo: grafana/grafana | issue: Config: date formats no longer configurable via environment variables in 12.1.0 | keyword: workaround
Use a 'ring' utility to shard requests based on the tenant for better load distribution.,"Sharding requests based on the tenant can help distribute the load more evenly across your servers, preventing any one server from becoming a bottleneck and improving overall system performance.",Improving server load distribution,Efficiency,4,4,Observed,workaround,System Optimization,N,nan,nan,nan,nan,nan,2025-04-10,github/gassiss,https://github.com/grafana/grafana/pull/103783,repo: grafana/grafana | keyword: gotcha | state: closed
Use value mapping for 'no data'-state to display a text/value instead,"This tactic enables users to display a more meaningful or relevant value/text when there's no data, instead of the generic 'no data' text. This can improve user experience and provide more context in data visualization tools.",Improving data visualization user experience,Efficiency,4,4,Observed,workaround,Data Visualization,N,nan,nan,nan,nan,nan,2019-12-03,github/mckn,https://github.com/grafana/grafana/pull/20842,repo: grafana/grafana | keyword: pro tip | state: closed
Use 'for_each' over the vault provider to reduce code redundancy,"By using the 'for_each' function over the vault provider, you can avoid duplicating the same piece of code for each namespace. This not only makes your code more efficient and readable, but also reduces the chance of errors.",Reducing code redundancy,Efficiency,4,5,Observed,workaround,Code Efficiency,N,nan,nan,nan,nan,nan,2020-09-16,github/rgevaert,https://github.com/hashicorp/terraform/issues/19932#issuecomment-693464489,repo: hashicorp/terraform | issue: Instantiating Multiple Providers with a loop | keyword: best practice
Use multiple providers and modules to create sets of S3 buckets across different regions.,"This workaround allows for the creation of multiple resources across different regions, which is not possible with provider interpolation. It's a more flexible approach to resource management in Terraform.",Managing multiple AWS resources,Efficiency,4,4,Observed,workaround,Resource Management,N,nan,nan,nan,nan,nan,2021-04-21,github/egeexyz,https://github.com/hashicorp/terraform/issues/19932#issuecomment-823748793,repo: hashicorp/terraform | issue: Instantiating Multiple Providers with a loop | keyword: best practice
Use Meta-Arguments 'condition' or 'include_if' to avoid using 'count= 0 or 1' or 'for_each empty or single item' in Terraform.,This tactic reduces the complexity of Terraform code by avoiding the use of logical statements in 'count'. It simplifies the code and makes it easier to maintain and understand.,Simplifying Terraform code,Efficiency,4,5,Observed,workaround,Code Simplification,N,nan,nan,nan,nan,nan,2021-08-07,github/damon-atkins,https://github.com/hashicorp/terraform/issues/21953#issuecomment-894608054,repo: hashicorp/terraform | issue: `enabled` parameter to avoid logical statements in `count` | keyword: best practice
Use 'enabled = <condition>' as a syntactic sugar to avoid complex logical statements in 'count' or 'for_each'.,"This approach simplifies the code, making it easier to read and maintain. It also reduces the potential for errors in complex logical statements.",Simplifying Terraform resource configuration,Efficiency,4,4,Observed,workaround,Code Optimization,N,nan,nan,nan,nan,nan,2022-08-16,github/nikolay,https://github.com/hashicorp/terraform/issues/21953#issuecomment-1216071967,repo: hashicorp/terraform | issue: 'enabled' parameter to avoid logical statements in 'count' | keyword: best practice
Use `one()` function in Terraform to avoid logical statements in `count`,The `one()` function in Terraform can serve as a workaround to avoid logical statements in `count`. It will return null if the expression does not evaluate and will be the specified attribute of `item[0]` if there is a zeroth item. This can help in simplifying the code and avoiding potential errors.,Avoiding logical statements in count,Efficiency,4,4,Observed,workaround,Code Optimization,N,nan,nan,nan,nan,nan,2022-08-19,github/schollii,https://github.com/hashicorp/terraform/issues/21953#issuecomment-1221169985,repo: hashicorp/terraform | issue: `enabled` parameter to avoid logical statements in `count` | keyword: best practice
Avoid relying solely on `prevent_destroy` in Terraform for resource protection.,"The `prevent_destroy` flag in Terraform can lead to frustration as it prevents half of its intended use case. It's designed to prevent accidental deletion of resources, but its current implementation can also hinder successful operations.",Terraform resource protection,Efficiency,3,4,Anecdotal,warning,Infrastructure Management,N,nan,nan,nan,nan,nan,2015-11-12,github/ketzacoatl,https://github.com/hashicorp/terraform/issues/3874,repo: hashicorp/terraform | keyword: best practice | state: open
Use 'terraform plan -destroy' with '-keep-prevent-destroy' flag to safeguard essential resources,"In the context of infrastructure as code, this tactic allows you to plan for the destruction of your infrastructure while preserving certain resources. This is useful when you have resources like Elastic IP addresses (EIPs) that need to be whitelisted or otherwise preserved during a destroy operation. The '-keep-prevent-destroy' flag ensures these resources are not destroyed, providing a safety net and avoiding potential disruptions.",Preserving essential resources during destruction,Risk,4,5,Observed,workaround,Infrastructure Management,N,nan,nan,nan,nan,nan,2015-11-16,github/mrfoobar1,https://github.com/hashicorp/terraform/issues/3874#issuecomment-157086868,repo: hashicorp/terraform | issue: prevent_destroy should let you succeed | keyword: best practice
Use `terraform destroy --ignore-prevent-destroy` for integration tests,"This command allows for the destruction of all resources after running integration tests, even those marked with prevent_destroy. It's a workaround for the inability to conditionally set resources to prevent_destroy, ensuring a clean state for each test run.",Running integration tests with Terraform,Efficiency,4,5,Observed,workaround,Testing,N,nan,nan,nan,nan,nan,2017-01-19,github/glasser,https://github.com/hashicorp/terraform/issues/3874#issuecomment-273662886,repo: hashicorp/terraform | issue: prevent_destroy should let you succeed | keyword: best practice
Use 'prevent_destroy' flag selectively to avoid unnecessary alerts,"The 'prevent_destroy' flag in Terraform is designed to alert and error out when an attempt is made to destroy a resource. However, indiscriminate use of this flag can lead to unnecessary alerts and hinder the efficient management of resources. By using this flag selectively, only on critical resources, you can ensure that alerts are meaningful and actionable.",Resource management in Terraform,Efficiency,4,4,Observed,workaround,Resource Management,N,nan,nan,nan,nan,nan,2017-06-06,github/HighwayofLife,https://github.com/hashicorp/terraform/issues/3874#issuecomment-306638305,repo: hashicorp/terraform | issue: prevent_destroy should let you succeed | keyword: best practice
Use 'for_each' support for modules when managing multiple AWS accounts in Terraform.,"The 'for_each' function in Terraform allows you to create multiple instances of a resource or module. This is particularly useful when managing a list of AWS accounts, as it allows you to provision each account with a set of standard resources in a more efficient and streamlined manner.",Managing multiple AWS accounts,Efficiency,4,4,Observed,workaround,Infrastructure Management,N,nan,nan,nan,nan,nan,2020-09-04,github/gbataille,https://github.com/hashicorp/terraform/issues/24476#issuecomment-686968681,repo: hashicorp/terraform | issue: Ability to pass providers to modules in for_each | keyword: best practice
Use 'for_each' instead of 'provider' when passing variables to modules in Terraform.,This approach allows you to manage multiple instances of a module in a more efficient way. It avoids the need to duplicate code and makes your configuration more maintainable and scalable.,Managing multiple module instances,Efficiency,4,4,Observed,workaround,Code Efficiency,N,nan,nan,nan,nan,nan,2020-09-25,github/vivanov-dp,https://github.com/hashicorp/terraform/issues/24476#issuecomment-698825661,repo: hashicorp/terraform | issue: Ability to pass providers to modules in for_each | keyword: best practice
Use AWS profiles instead of direct access keys in build steps,"Using AWS profiles allows for better security and management of access keys, as they are not directly exposed in the build steps. This approach also enables easy switching between different AWS accounts.",Managing AWS access in build steps,Risk,4,4,Anecdotal,workaround,Security Management,N,nan,nan,nan,nan,nan,2017-04-11,github/darrensimio,https://github.com/hashicorp/terraform/issues/13022#issuecomment-293172268,repo: hashicorp/terraform | issue: Using variables in terraform backend config block | keyword: best practice
Use a wrapper script to pass variables into `init` for Terraform backend configuration,"This workaround leverages Terraform's ability to remember what you pass into `init`. By using a wrapper script to grab variables from a file or environment variable, you can streamline the process of setting `-backend-config` flags.",Streamlining Terraform backend configuration,Efficiency,4,4,Observed,workaround,DevOps,N,nan,nan,nan,nan,nan,2018-11-28,github/glenjamin,https://github.com/hashicorp/terraform/issues/13022#issuecomment-442499201,repo: hashicorp/terraform | issue: Using variables in terraform backend config block | keyword: best practice
Use symbolic links instead of copying files to save storage space.,"Creating symbolic links instead of copying files can save significant storage space, especially when dealing with large files or directories. This is particularly useful in scenarios where storage can become a problem, such as managing Terraform Modules & Git repositories.",Managing large files or directories,Efficiency,4,4,Observed,workaround,Storage Management,N,nan,nan,nan,nan,nan,2021-09-05,github/fblgit,https://github.com/hashicorp/terraform/issues/29503#issuecomment-913185996,repo: hashicorp/terraform | issue: Don't make redundant copies of the same module package | keyword: best practice
Use `docker exec` for provisioning instead of ssh connection,"This method eliminates the need to set up an ssh daemon on the docker container, which can simplify the process and reduce potential points of failure.",Provisioning in Docker environments,Efficiency,4,4,Observed,workaround,DevOps,N,nan,nan,nan,nan,nan,2016-01-15,github/clofresh,https://github.com/hashicorp/terraform/issues/4686,repo: hashicorp/terraform | keyword: best practice | state: open
Use the `TF_DATA_DIR` variable to create region-specific Terraform backends,"By using the `TF_DATA_DIR` variable, you can dynamically set up Terraform backends for different regions or environments. This allows for more granular control and isolation of resources, reducing the risk of cross-environment contamination and making it easier to manage and troubleshoot issues.",Setting up region-specific Terraform backends,"Efficiency, Risk",4,4,Observed,workaround,Infrastructure Management,N,nan,nan,nan,nan,nan,2024-04-04,github/julian-alarcon,https://github.com/hashicorp/terraform/issues/18632#issuecomment-2036465697,repo: hashicorp/terraform | issue: terraform init seems to not support basic terraform best practice | keyword: best practice
"Use a null resource combined with local exec to manage remote server objects in Terraform, instead of triggers.","This workaround avoids storing sensitive tokens in the tfstate, which can pose a security risk. By using a null resource and local exec, you can manage objects on a remote server without compromising security.",Remote server object management,Risk,4,4,Observed,workaround,Security Management,N,nan,nan,nan,nan,nan,2020-03-25,github/mldmld68,https://github.com/hashicorp/terraform/issues/23679#issuecomment-603713100,repo: hashicorp/terraform | issue: Allow destroy-time provisioners to access variables | keyword: best practice
"Avoid publishing wrapper modules as separate entities, instead incorporate 'module' blocks directly in the root module.","This approach reduces the extra boilerplate of declaring the union of all variables of the child modules you're wrapping. It keeps the module structure 'flat', making it easier to manage and understand.",Managing complex module structures,Efficiency,4,4,Observed,rule-of-thumb,Code Management,N,nan,nan,nan,nan,nan,2022-08-19,github/apparentlymart,https://github.com/hashicorp/terraform/issues/31485#issuecomment-1221143323,repo: hashicorp/terraform | issue: [Feature] Module Variable and Output Inheritance (or simular) | keyword: best practice
Use cryptographically secure methods for storing sensitive values,"Non-secure methods like hashing can be reversed, exposing sensitive data. Cryptographically secure methods provide a higher level of security, reducing the risk of data breaches.",Storing sensitive values in files,Risk,4,4,Anecdotal,rule-of-thumb,Data Security,N,nan,nan,nan,nan,nan,2016-01-22,github/johnrengelman,https://github.com/hashicorp/terraform/issues/516#issuecomment-173926752,repo: hashicorp/terraform | issue: Storing sensitive values in state files | keyword: best practice
Avoid dynamic templates in your codebase to reduce confusion and frustration.,"Dynamic templates can cause confusion due to issues such as double-escaping errors. These errors are often difficult to interpret as they are returned at the Terraform layer, leading to increased frustration and time spent debugging.",Codebase management and debugging,Efficiency,4,4,Observed,rule-of-thumb,Code Management,N,nan,nan,nan,nan,nan,2020-05-18,github/apparentlymart,https://github.com/hashicorp/terraform/pull/24978#issuecomment-630337484,repo: hashicorp/terraform | issue: lang/funcs: add template function | keyword: best practice
Avoid using dynamic templates in Terraform to reduce confusion and frustration.,"Dynamic templates can lead to double-escaping errors and unclear error messages. By avoiding them, you can reduce confusion and frustration, and make error messages easier to interpret.",Terraform template rendering,Efficiency,4,5,Observed,rule-of-thumb,Error Management,N,nan,nan,nan,nan,nan,2020-05-19,github/barryib,https://github.com/hashicorp/terraform/pull/24978#issuecomment-631062552,repo: hashicorp/terraform | issue: lang/funcs: add template function | keyword: best practice
Use UI mockups to visualize potential changes during software development phases.,"UI mockups can help to visualize and communicate potential changes in a software development project. This can help to identify potential issues or improvements early in the development process, before significant resources have been invested in implementation.","Software development, UI design",Efficiency,4,4,Observed,rule-of-thumb,Project Management,N,nan,nan,nan,nan,nan,2020-09-03,github/apparentlymart,https://github.com/hashicorp/terraform/issues/26093#issuecomment-686763063,repo: hashicorp/terraform | issue: Ability to preview changes for Refresh Command | keyword: best practice
Use 'terraform apply -refresh-only' instead of 'terraform refresh' for previewing changes,The 'terraform apply -refresh-only' command activates one of Terraform's planning modes -- 'Refresh-only' mode -- which effectively allows you to preview changes without applying them. This is a more efficient way to check for potential issues before making any changes.,Previewing changes in Terraform,Efficiency,4,5,Observed,workaround,Code Management,N,nan,nan,nan,nan,nan,2025-01-28,github/apparentlymart,https://github.com/hashicorp/terraform/issues/26093#issuecomment-2617489040,repo: hashicorp/terraform | issue: Ability to preview changes for Refresh Command | keyword: best practice
Avoid bypassing Terraform's existence check when creating new workspaces.,"Bypassing Terraform's existence check may lead to unintended side effects, such as the new workspace being created as a result of writing its new state, rather than as an explicit action. This could lead to confusion and potential errors in the future.",Creating new workspaces in Terraform,Risk,4,5,Observed,warning,Software Development,N,nan,nan,nan,nan,nan,2018-03-22,github/apparentlymart,https://github.com/hashicorp/terraform/issues/15874#issuecomment-375447707,repo: hashicorp/terraform | issue: Document $TF_WORKSPACE | keyword: lesson learned
Use 'prevent_destroy' to selectively protect resources in code deployment,"In code deployment, there may be resources that you want to protect from being destroyed. By marking these resources with 'prevent_destroy', you can ensure they are not destroyed even when you run 'destroy' command. This is a workaround to the lack of inverse targeting or exclude feature.",Selective resource protection in code deployment,Risk,3,4,Observed,workaround,Code Deployment,N,nan,nan,nan,nan,nan,2017-10-09,github/ColOfAbRiX,https://github.com/hashicorp/terraform/issues/2253#issuecomment-335145477,repo: hashicorp/terraform | issue: feature request: inverse targeting / exclude | keyword: workaround
Use '-state=...' option selectively with terraform commands as it behaves differently for 'terraform workspace new'.,"The '-state=...' option is a legacy option for the local backend only. However, for 'terraform workspace new', the command handles the option inline itself rather than passing it over to the backend as other commands do. This can lead to unexpected behavior if not used correctly.",Using terraform in cloud environments,Efficiency,4,4,Observed,workaround,Cloud Management,N,nan,nan,nan,nan,nan,2021-10-29,github/apparentlymart,https://github.com/hashicorp/terraform/issues/29819#issuecomment-955087649,repo: hashicorp/terraform | issue: Creating a new workspace with `terraform workspace new -state=tf.state.default` does not work for s3 remote state. | keyword: workaround
Use `terraform show -json planfile` to get a full verbose plan.,"This workaround allows you to view the full verbose plan in JSON format, which can be easier to parse and analyze than the default output. It's a useful technique when the standard `terraform state show` command doesn't provide enough detail.",Need for detailed terraform plan,Efficiency,4,5,Observed,workaround,Data Analysis,N,nan,nan,nan,nan,nan,2022-02-13,github/dduleep,https://github.com/hashicorp/terraform/issues/27547#issuecomment-1038019629,repo: hashicorp/terraform | issue: Feature Request:  Verbose option for plan | keyword: workaround
Use XDG Base Directory Specification on Linux to organize Terraform configuration and cache files,"Following the XDG Base Directory Specification allows for a more organized file system, making it easier to locate and manage configuration and cache files. This reduces clutter in the home directory and separates configuration from cache, which can be safely deleted.",Organizing Terraform files on Linux,Efficiency,4,4,Observed,workaround,File Management,N,nan,nan,nan,nan,nan,2017-06-23,github/jleclanche,https://github.com/hashicorp/terraform/issues/15389,repo: hashicorp/terraform | keyword: workaround | state: open
Use XDG directories for backup and synchronization to reduce cognitive load.,"XDG directories provide a structured and standardized way to organize files, reducing the cognitive load of having to cherry-pick files from various locations. This makes the backup and synchronization process more efficient and less error-prone.",Backup and synchronization process,Efficiency,4,4,Observed,workaround,Data Management,N,nan,nan,nan,nan,nan,2019-06-26,github/0az,https://github.com/hashicorp/terraform/issues/15389#issuecomment-506050093,repo: hashicorp/terraform | issue: Use xdg basedir spec on linux | keyword: workaround
Prioritize `$XDG_*` directories over legacy locations for configuration files,"Using `$XDG_*` directories for configuration files is a more modern and widely accepted standard. Other projects will gracefully fall back to the legacy locations, ensuring backward compatibility.",Software configuration file placement,Efficiency,4,5,Observed,workaround,Software Development,N,nan,nan,nan,nan,nan,2019-06-30,github/0az,https://github.com/hashicorp/terraform/issues/15389#issuecomment-507049496,repo: hashicorp/terraform | issue: Use xdg basedir spec on linux | keyword: workaround
Use 'for_each' over the vault provider to reduce code redundancy,"By using 'for_each' over the vault provider, you can avoid duplicating the same piece of code for each namespace. This not only reduces the amount of code you have to write, but also makes your code easier to maintain and less prone to errors.",Reducing code redundancy in vault,Efficiency,4,4,Observed,workaround,Code Efficiency,N,nan,nan,nan,nan,nan,2020-09-16,github/rgevaert,https://github.com/hashicorp/terraform/issues/19932#issuecomment-693464489,repo: hashicorp/terraform | issue: Instantiating Multiple Providers with a loop | keyword: workaround
Use multiple providers and modules to create sets of S3 buckets across different regions.,"While provider interpolation might be cleaner, this workaround allows for the creation of multiple resources across different regions. It's a practical solution when dealing with cloud storage and data management on a global scale.",Global cloud storage management,Efficiency,4,3,Observed,workaround,Cloud Management,N,nan,nan,nan,nan,nan,2021-04-21,github/egeexyz,https://github.com/hashicorp/terraform/issues/19932#issuecomment-823748793,repo: hashicorp/terraform | issue: Instantiating Multiple Providers with a loop | keyword: workaround
Use Meta-Argument `condition` or `include_if` to avoid logical statements in `count`,This tactic works because it simplifies the code and reduces the chance of errors by replacing `count= 0 or 1 ` or `for_each empty or single item` with more intuitive Meta-Arguments. It also improves readability and maintainability of the code.,Code simplification and error reduction,Efficiency,4,4,Observed,workaround,Code Management,N,nan,nan,nan,nan,nan,2021-08-07,github/damon-atkins,https://github.com/hashicorp/terraform/issues/21953#issuecomment-894608054,repo: hashicorp/terraform | issue: `enabled` parameter to avoid logical statements in `count` | keyword: workaround
Use 'enabled = <condition>' instead of 'count = <condition> ? 1 : 0' to simplify code in Terraform.,"This approach reduces the complexity of the code and makes it more readable. It also avoids the use of logical statements in 'count', which can be confusing and prone to errors.",Simplifying Terraform code,Efficiency,4,4,Observed,workaround,Code Simplification,N,nan,nan,nan,nan,nan,2022-08-16,github/nikolay,https://github.com/hashicorp/terraform/issues/21953#issuecomment-1216071967,repo: hashicorp/terraform | issue: 'enabled' parameter to avoid logical statements in 'count' | keyword: workaround
Use 'one()' function as a workaround to avoid logical statements in 'count',"The 'one()' function can be used to extract the first item from a list, which can help in avoiding the use of logical statements in 'count'. This can simplify the code and make it more readable.",Avoiding logical statements in 'count',Efficiency,3,4,Observed,workaround,Code Simplification,N,nan,nan,nan,nan,nan,2022-08-19,github/schollii,https://github.com/hashicorp/terraform/issues/21953#issuecomment-1221169985,repo: hashicorp/terraform | issue: 'enabled' parameter to avoid logical statements in 'count' | keyword: workaround
Avoid using Terragrunt's provider caching for Terraform projects due to potential slowdowns and instability.,"Terragrunt's provider caching feature can cause Terraform projects to run slower and become unstable, as it changes the Terraform provider lock file to exact versions, which might not always be ideal for every project.",Managing Terraform projects,Efficiency,4,5,Anecdotal,warning,Project Management,N,nan,nan,nan,nan,nan,2025-01-19,github/grimm26,https://github.com/hashicorp/terraform/issues/31964#issuecomment-2600884749,repo: hashicorp/terraform | issue: Allow multiple Terraform instances to write to `plugin_cache_dir` concurrently | keyword: workaround
Avoid using `prevent_destroy` flag in Terraform for half-use cases,"The current implementation of `prevent_destroy` flag in Terraform can lead to more frustration than alleviation when used for half-use cases. It prevents you from successfully executing your tasks, instead of protecting your resources.",Terraform `prevent_destroy` flag usage,Efficiency,3,4,Observed,warning,Code Efficiency,N,nan,nan,nan,nan,nan,2015-11-12,github/ketzacoatl,https://github.com/hashicorp/terraform/issues/3874,repo: hashicorp/terraform | keyword: workaround | state: open
Use 'terraform plan -destroy' with '-keep-prevent-destroy' flag to maintain essential resources while destroying others.,"This tactic allows you to destroy most of your infrastructure while preserving certain resources. It's useful when you want to rebuild your infrastructure but need to keep some resources intact, such as Elastic IP addresses that are whitelisted.",Preserving whitelisted resources during rebuild,Efficiency,4,4,Observed,workaround,Infrastructure Management,N,nan,nan,nan,nan,nan,2015-11-16,github/mrfoobar1,https://github.com/hashicorp/terraform/issues/3874#issuecomment-157086868,repo: hashicorp/terraform | issue: prevent_destroy should let you succeed | keyword: workaround
Use `terraform destroy --ignore-prevent-destroy` command in integration test scripts to override prevent_destroy settings.,"This workaround allows for the complete destruction of all resources after running integration tests, even when prevent_destroy is set for production environments. It provides a way to manage resources that need to be preserved in production but removed in testing scenarios.",Managing resources in test environments,Efficiency,4,4,Observed,workaround,Resource Management,N,nan,nan,nan,nan,nan,2017-01-19,github/glasser,https://github.com/hashicorp/terraform/issues/3874#issuecomment-273662886,repo: hashicorp/terraform | issue: prevent_destroy should let you succeed | keyword: workaround
Use 'prevent_destroy' flag selectively to avoid unnecessary alerts and errors.,"The 'prevent_destroy' flag in Terraform is designed to prevent the accidental destruction of resources. However, it can also lead to unnecessary alerts and errors if used indiscriminately. By using it selectively, you can ensure the protection of critical resources without hindering the workflow.",Managing resources in Terraform,Efficiency,4,4,Observed,workaround,Resource Management,N,nan,nan,nan,nan,nan,2017-06-06,github/HighwayofLife,https://github.com/hashicorp/terraform/issues/3874#issuecomment-306638305,repo: hashicorp/terraform | issue: prevent_destroy should let you succeed | keyword: workaround
Avoid using reverse(list)[N-1] as a substitute for list[-N],This approach is considered an anti-pattern and may lead to inefficient code. It's better to use the built-in functionality of the language to access elements in a list.,Accessing elements in list,Efficiency,4,5,Observed,warning,Code Efficiency,N,nan,nan,nan,nan,nan,2021-07-07,github/txomon,https://github.com/hashicorp/terraform/issues/21793#issuecomment-875534495,repo: hashicorp/terraform | issue: Allow negative negative indices in slice() | keyword: workaround
Avoid making temporary workarounds permanent in your code.,"Temporary workarounds are often used to quickly solve a problem, but they may not be the most efficient or effective solution in the long run. They can lead to messy code, technical debt, and potential issues down the line.",Quick-fix coding solutions,Efficiency,4,4,Observed,warning,Code Management,N,nan,nan,nan,nan,nan,2021-07-07,github/schollii,https://github.com/hashicorp/terraform/issues/21793#issuecomment-875632796,repo: hashicorp/terraform | issue: Allow negative negative indices in slice() | keyword: workaround
Use 'MeetingConstraintsExact' instead of 'MeetingConstraints' when needing to select any prerelease that otherwise meets the constraints.,"The 'MeetingConstraintsExact' function allows for more precise selection of prereleases in module constraints, providing a workaround for situations where the broader 'MeetingConstraints' function may not yield the desired results.",Selecting prereleases in module constraints,Efficiency,4,4,Observed,workaround,Code Efficiency,N,nan,nan,nan,nan,nan,2025-05-05,github/apparentlymart,https://github.com/hashicorp/terraform/issues/36985#issuecomment-2852587893,repo: hashicorp/terraform | issue: allow optional support for matching prerelease versions in module constraints | keyword: workaround
Use absolute URLs in 'X-Terraform-Get' for consistent results,"The Terraform registry protocol defines that a path returned in 'X-Terraform-Get' from an HTTP URL is considered a relative path to the first request. Using absolute URLs ensures that the path is not misinterpreted as relative, avoiding potential inconsistencies.",Implementing Terraform registry protocol,Efficiency,4,5,Observed,workaround,Software Development,N,nan,nan,nan,nan,nan,2022-07-08,github/jbardin,https://github.com/hashicorp/terraform/issues/31404#issuecomment-1178990550,repo: hashicorp/terraform | issue: Regression due to #31237: Local paths not valid return values any more | keyword: workaround
Use a cgo-enabled build to work around DNS issues in golang projects,"Golang uses its own DNS resolver rather than the native one, which can cause issues in projects like Terraform. A cgo-enabled build can help circumvent these problems.",DNS issues in golang projects,Efficiency,4,3,Observed,workaround,Project Management,N,nan,nan,nan,nan,nan,2020-12-30,github/danieldreier,https://github.com/hashicorp/terraform/issues/27379#issuecomment-752720887,repo: hashicorp/terraform | issue: Terraform init is extremely slow | keyword: workaround
Avoid dynamic templates in `templatefile` to reduce confusion and frustration,"Dynamic templates can cause confusion and frustration due to frequent double-escaping errors and unclear error messages returned at the Terraform layer instead of at the template layer. By avoiding dynamic templates, you can reduce these issues and improve the user experience.",Designing template files in Terraform,Efficiency,3,4,Observed,workaround,Error Management,N,nan,nan,nan,nan,nan,2020-05-18,github/apparentlymart,https://github.com/hashicorp/terraform/pull/24978#issuecomment-630337484,repo: hashicorp/terraform | issue: lang/funcs: add template function | keyword: workaround
Avoid dynamic templates in Terraform to minimize confusion and frustration.,"Dynamic templates in Terraform often lead to double-escaping errors, which are returned at the Terraform layer instead of at the template rendering layer, making them difficult to interpret.",Terraform template rendering,Efficiency,3,4,Observed,workaround,Error Prevention,N,nan,nan,nan,nan,nan,2020-05-19,github/barryib,https://github.com/hashicorp/terraform/pull/24978#issuecomment-631062552,repo: hashicorp/terraform | issue: lang/funcs: add template function | keyword: workaround
Use null as default value for optional keys in Terraform to avoid errors when they are left undefined.,"In Terraform, when optional keys in object variables are left undefined, they are automatically considered as errors. However, by setting the default value as null, these keys are evaluated as null instead of causing errors. This workaround allows for smoother execution of Terraform scripts and reduces the risk of unexpected errors.",Defining optional keys in Terraform,Efficiency,4,4,Observed,workaround,Error Handling,N,nan,nan,nan,nan,nan,2025-05-16,github/tspearconquest,https://github.com/hashicorp/terraform/issues/37069,repo: hashicorp/terraform | keyword: workaround | state: closed
Use `prevent_destroy` to safeguard specific resources during code execution,"This tactic allows you to selectively protect certain resources from being destroyed during code execution, providing a level of control and safety. It prevents unintentional loss of important resources.",Code execution in resource-heavy projects,Risk,4,3,Observed,workaround,Code Management,N,nan,nan,nan,nan,nan,2017-10-09,github/ColOfAbRiX,https://github.com/hashicorp/terraform/issues/2253#issuecomment-335145477,repo: hashicorp/terraform | issue: feature request: inverse targeting / exclude | keyword: gotcha
Use `data` instead of `resource` in Terraform configurations to avoid triggering destruction of resources managed elsewhere.,"In Terraform, using `data` instead of `resource` allows you to destroy all of your resources without triggering Terraform to destroy any resource that is managed elsewhere. This workaround can help avoid unintended consequences when managing infrastructure.",Avoiding unintended resource destruction,Risk,3,4,Anecdotal,workaround,Infrastructure Management,N,nan,nan,nan,nan,nan,2018-11-26,github/zhao-li,https://github.com/hashicorp/terraform/issues/2253#issuecomment-441843773,repo: hashicorp/terraform | issue: feature request: inverse targeting / exclude | keyword: gotcha
Use 'for_each' support for modules in Terraform to manage AWS accounts,"The 'for_each' support allows you to manage multiple AWS accounts in a more efficient way. It enables you to create a new account and provision it with common standard resources, all from a variable list. This reduces the manual work and potential for errors.",Managing multiple AWS accounts,Efficiency,4,3,Observed,workaround,Cloud Management,N,nan,nan,nan,nan,nan,2020-09-04,github/gbataille,https://github.com/hashicorp/terraform/issues/24476#issuecomment-686968681,repo: hashicorp/terraform | issue: Ability to pass providers to modules in for_each | keyword: gotcha
Use 'for_each' with local variables in Terraform to pass providers to modules,This method allows you to dynamically create and manage multiple instances of a module with different configurations. It avoids hardcoding and makes your infrastructure code more flexible and reusable.,Managing multiple AWS instances,Efficiency,4,4,Observed,workaround,Infrastructure as Code,N,nan,nan,nan,nan,nan,2020-09-25,github/vivanov-dp,https://github.com/hashicorp/terraform/issues/24476#issuecomment-698825661,repo: hashicorp/terraform | issue: Ability to pass providers to modules in for_each | keyword: gotcha
Use 'dotenv' package to read .env files in Terraform,"Terraform does not natively support reading .env files, but the 'dotenv' package can be used as a workaround. This avoids the need to maintain two separate secret-variable files, increasing efficiency and reducing potential errors.",Managing secret variables in Terraform,Efficiency,4,5,Observed,workaround,Code Management,N,nan,nan,nan,nan,nan,2020-01-21,github/MagnusBrzenk,https://github.com/hashicorp/terraform/issues/23906,repo: hashicorp/terraform | keyword: gotcha | state: closed
Use a `.env` file to store and manage static assets for front-end applications.,"This approach allows you to avoid hardcoding your username and repo in the code, which can make updates and changes easier to manage. It also provides a centralized location for all static assets, which can improve organization and efficiency.",Managing static assets in front-end development,Efficiency,4,5,Observed,workaround,Code Management,N,nan,nan,nan,nan,nan,2020-01-24,github/MagnusBrzenk,https://github.com/hashicorp/terraform/issues/23906#issuecomment-578307773,repo: hashicorp/terraform | issue: Request: Enable simple/native way to read .env files | keyword: gotcha
Use simpler regex patterns when dealing with environment variables,"Complex regex patterns may not always work as expected, especially when dealing with environment variables. Simpler patterns, such as `(.*?)=(.*)`, can often be more reliable and easier to debug.",Handling environment variables,Efficiency,4,4,Observed,workaround,Debugging,N,nan,nan,nan,nan,nan,2024-01-18,github/BenJackGill,https://github.com/hashicorp/terraform/issues/23906#issuecomment-1897871720,repo: hashicorp/terraform | issue: Request: Enable simple/native way to read .env files | keyword: gotcha
Use Concourse as an alternative to Makefile for tasks that need to be done before or after the 'apply'.,"Concourse provides a more robust tooling environment for managing dependencies and executing tasks in a specific order, which is not always guaranteed with Makefile.",Managing task dependencies and order,Efficiency,4,4,Anecdotal,workaround,Task Management,N,nan,nan,nan,nan,nan,2019-09-03,github/mutt13y,https://github.com/hashicorp/terraform/issues/22036#issuecomment-527365696,repo: hashicorp/terraform | issue: depends_on should should defer interpolation | keyword: gotcha
Avoid using `base64sha256` to decode a base64-encoded string before generating a SHA256 hash.,"The `base64sha256` function calculates a SHA256 hash of a string and then base64 encodes it, rather than decoding a base64-encoded string and then generating a SHA256 hash. Using it incorrectly can lead to syntactically valid but semantically invalid results.",Hashing and encoding strings,Efficiency,4,5,Observed,warning,Data Encoding,N,nan,nan,nan,nan,nan,2022-08-31,github/apparentlymart,https://github.com/hashicorp/terraform/issues/22036#issuecomment-1233324723,repo: hashicorp/terraform | issue: depends_on should should defer interpolation | keyword: gotcha
Use hardcoded strings instead of locals in Terraform to avoid crashes,Terraform may crash when using locals due to incorrect referencing or unsupported features. Hardcoding strings can ensure the stability of the code.,Preventing Terraform code crashes,Efficiency,3,4,Observed,workaround,Code Stability,N,nan,nan,nan,nan,nan,2024-01-28,github/novekm,https://github.com/hashicorp/terraform/issues/34584#issuecomment-1913430431,repo: hashicorp/terraform | issue: `terraform test` Consistently Crashing | keyword: gotcha
Use local SSH binary instead of native Go implementation for better compatibility,"Local SSH binary is more likely to be compatible with various systems and configurations, reducing the risk of compatibility issues that can arise with the native Go implementation","Software development, system compatibility",Efficiency,4,4,Observed,workaround,System Compatibility,N,nan,nan,nan,nan,nan,2017-12-06,github/dangregorysony,https://github.com/hashicorp/terraform/issues/4523#issuecomment-349686963,repo: hashicorp/terraform | issue: Support SSH over HTTP Proxy | keyword: pro tip
